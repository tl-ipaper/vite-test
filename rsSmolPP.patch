diff --git a/lib/utils.js b/lib/utils.js
index 7ae9b5698b6f4d943a2ce4c48379a6df71bd391b..f5284e403e6add19846ba5f657df088965765211 100644
--- a/lib/utils.js
+++ b/lib/utils.js
@@ -6,6 +6,7 @@ Object.defineProperty(exports, "__esModule", { value: true });
 exports.formatError = exports.readConfig = exports.getSkipFlag = exports.getBrowserOptions = exports.getPlaywrightInstance = exports.getDeviceBrowserType = exports.generateKey = exports.getBrowserType = exports.getDisplayName = exports.checkDevice = exports.checkDeviceEnv = exports.deepMerge = exports.checkBrowserEnv = void 0;
 const fs_1 = __importDefault(require("fs"));
 const path_1 = __importDefault(require("path"));
+const { stderr } = require("process");
 const constants_1 = require("./constants");
 const fsPromises = fs_1.default.promises;
 const BROWSERS = [constants_1.CHROMIUM, constants_1.FIREFOX, constants_1.WEBKIT];
@@ -85,6 +86,11 @@ const getDeviceBrowserType = (device, availableDevices) => {
 };
 exports.getDeviceBrowserType = getDeviceBrowserType;
 const getPlaywrightInstance = (browserName) => {
+    console.log('================== LOOKING FOR ===============\n\n');
+    console.log(browserName);
+    console.log('\n');
+
     let pw;
     let name;
     if (!browserName) {
@@ -97,15 +103,25 @@ const getPlaywrightInstance = (browserName) => {
         };
     }
     try {
-        pw = require(`${constants_1.IMPORT_KIND_PLAYWRIGHT}-${browserName}`);
-        name = browserName;
+        pw = require('playwright-chromium');
+        name = 'chromium';
     }
     catch (e) {
+        console.log('\nOUTTER CATCH =================================================\n\n');
+            console.error(e);
+            console.log('\n\n=================================================\n\n');
         try {
-            pw = require(constants_1.IMPORT_KIND_PLAYWRIGHT);
-            name = constants_1.IMPORT_KIND_PLAYWRIGHT;
+            pw = require('playwright');
+            name = 'playwright';
         }
         catch (e) {
+            console.log('\nINNER CATCH =================================================\n\n');
+            console.error(e);
+            console.log('\n\n=================================================\n\n');
             throw new PlaywrightError(`Cannot find playwright package to use ${browserName}`);
         }
     }
